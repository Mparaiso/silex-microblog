# Entity\Account.dcm.yml
Entity\Account:
  type: entity
  table: blog_accounts
  id:
    id:
      type: integer
      generator:
        strategy: AUTO
  fields:
    username:
      type: string
      length: 255
      unique: true
    email:
      type: string
      length: 255
      unique: true
      nullable: true
    bio:
      type: string
      lenght: 255
      nullable: true
    last_login:
      type: datetime
      nullable: true
    created_at:
      type: datetime
    updated_at:
      type: datetime
  oneToMany:
    posts:
      targetEntity: Entity\Post
      mappedBy: account
  oneToOne:
    user:
      targetEntity: Entity\User
      inversedBy: account
      cascade: ["all"]
  manyToMany:
    ## EN : the people this account follows 
    ## FR : les gens que ce compte suit
    followed:
      targetEntity: Entity\Account
      mappedBy: followers
    ## EN : the people that follow this account 
    ## FR : les gens qui suivent ce compte
    followers:
      targetEntity: Entity\Account
      inversedBy: followed
      joinTable:
        name: blog_followers
        joinColumns:
          account_id:
            referencedColumnName: id
        inverseJoinColumns:
          follower_id:
            referencedColumnName: id
#      joinColumn:
#        name: user_id
#        referencedColumnName: id
#  oneToMany:
#    phonenumbers:
#      targetEntity: Phonenumber
#      mappedBy: user
#      cascade: ["persist", "merge"]
#  manyToMany:
#    groups:
#      targetEntity: Group
#      joinTable:
#        name: cms_users_groups
#        joinColumns:
#          user_id:
#            referencedColumnName: id
#        inverseJoinColumns:
#          group_id:
#            referencedColumnName: id
#  lifecycleCallbacks:
#    prePersist: [ doStuffOnPrePersist, doOtherStuffOnPrePersistToo ]
#    postPersist: [ doStuffOnPostPersist ]
